
// ----------------------------
// AUTOGENERATED FROM:
// {{{shorthand_file}}}
// ----------------------------

#import "{{{class_name}}}.h"

@implementation {{{class_name}}}

{{#ivars_with_properties}}
@synthesize {{{property_name}}} = {{{ivar_name}}};
{{/ivars_with_properties}}

- (void) dealloc;
{
	{{#ivars_with_properties}}
	self.{{{property_name}}} = nil;
	{{/ivars_with_properties}}
	
	{{#ivars_without_properties}}
	[{{{ivar_name}}} release];
	{{/ivars_without_properties}}
	
	[super dealloc]
}

{{#ivars_with_properties}}
	{{#needs_explicit_setter}}
- (void) set{{{capitalized_property_name}}}:({{{ivar_type}}}) aNewValue;
{
	if (aNewValue != {{{ivar_name}}}) {
		
	{{#will_set}}
		[self {{{property_name}}}WillChangeToValue:aNewValue fromValue:{{{ivar_name}}}];
	{{/will_set}}
	{{#did_set}}
		{{{ivar_type}}} anOldValue = {{{ivar_name}}};
	{{/did_set}}
	{{^is_assign}}
		{{#did_set}}
			[[anOldValue retain] autorelease];
		{{/did_set}}
	{{/is_assign}}

	{{#is_assign}}
		{{{ivar_name}}} = aNewValue;
	{{/is_assign}}
	{{^is_assign}}
		[{{{ivar_name}}} release];
		{{{ivar_name}}} = [aNewValue {{{memory_management_call}}}];
	{{/is_assign}}
	
	{{#did_set}}
		[self {{{property_name}}}DidChangeToValue:aNewValue fromValue:anOldValue];
	{{/did_set}}
	
	}
}	
	{{/needs_explicit_setter}}
{{/ivars_with_properties}}

@end
